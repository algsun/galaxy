<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
	http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.microwise</groupId>
    <artifactId>galaxy</artifactId>
    <packaging>war</packaging>
    <version>3.1-SNAPSHOT</version>
    <name>galaxy</name>
    <url>http://microwise-system.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <db>galaxy</db>
        <dbUser>microwise</dbUser>
        <dbPassword>microwise</dbPassword>
        <productDB>galaxy_product</productDB>
        <devDB>galaxy_dev</devDB>
        <testDB>galaxy_test</testDB>
        <dbHost>127.0.0.1</dbHost>
        <dbPort>3306</dbPort>
        <shiro.version>1.2.1</shiro.version>
        <struts.version>2.3.8</struts.version>
        <spring.version>4.2.1.RELEASE</spring.version>
        <es.version>2.1.1</es.version>
    </properties>

    <dependencies>

        <!-- struts -->
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-core</artifactId>
            <version>${struts.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-json-plugin</artifactId>
            <version>${struts.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-spring-plugin</artifactId>
            <version>${struts.version}</version>

            <!-- 去掉不需要的依赖 -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.bastengao.freeroute</groupId>
            <artifactId>struts2-freeroute4spring</artifactId>
            <version>1.0.4</version>
        </dependency>

        <!-- spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!--websocket-->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator</artifactId>
            <version>0.32-1</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>sockjs-client</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>stomp-websocket</artifactId>
            <version>2.3.3-1</version>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.2.2</version>
        </dependency>

        <!--swagger-springmvc-->
        <dependency>
            <groupId>com.mangofactory</groupId>
            <artifactId>swagger-springmvc</artifactId>
            <version>0.8.8</version>
        </dependency>


        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.1.41</version>
        </dependency>


        <!-- log(slf4j) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.5</version>
        </dependency>

        <!-- 连接mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.21</version>
        </dependency>

        <!-- mybatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.1.1</version>
        </dependency>

        <!-- mybatis结合spring -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.2.0</version>
        </dependency>

        <!-- hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.1.7.Final</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hibernate4</artifactId>
            <version>2.9.0.pr3</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.9.0.pr3</version>
        </dependency>

        <!--&lt;!&ndash; 连接池 &ndash;&gt;-->
        <!--<dependency>-->
        <!--<groupId>org.hibernate</groupId>-->
        <!--<artifactId>hibernate-c3p0</artifactId>-->
        <!--<version>4.1.7.Final</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>org.hibernate</groupId>-->
        <!--<artifactId>hibernate-validator</artifactId>-->
        <!--<version>4.1.0.Final</version>-->
        <!--</dependency>-->

        <!--&lt;!&ndash; dbcp、pool &ndash;&gt;-->
        <!--<dependency>-->
        <!--<groupId>commons-dbcp</groupId>-->
        <!--<artifactId>commons-dbcp</artifactId>-->
        <!--<version>1.4</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>commons-pool</groupId>-->
        <!--<artifactId>commons-pool</artifactId>-->
        <!--<version>1.6</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>commons-collections</groupId>-->
        <!--<artifactId>commons-collections</artifactId>-->
        <!--<version>3.2.1</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>org.aspectj</groupId>-->
        <!--<artifactId>aspectjweaver</artifactId>-->
        <!--<version>1.7.1</version>-->
        <!--</dependency>-->

        <!--alibaba druid-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.0.29</version>
        </dependency>

        <!-- guava工具组件 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>

        <!-- json 工具类 -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.2</version>
        </dependency>

        <!-- joda-time时间组件 -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.1</version>
        </dependency>

        <!-- spring-email -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- email 支持 -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.5.0-b01</version>
        </dependency>

        <!-- quartz（定时器）任务调度 -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.1.7</version>
        </dependency>

        <!-- bcrypt加密jar包 -->
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.3m</version>
        </dependency>


        <!-- shiro(权限框架) -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-aspectj</artifactId>
            <version>${shiro.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>2.3.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- 单元测试 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- 测试：spring支持 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- DBunit自动化测试 -->
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>2.4.9</version>
            <scope>test</scope>
        </dependency>

        <!-- yaml 支持 -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.13</version>
        </dependency>

        <!-- excel操作相关 -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.13</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-scratchpad</artifactId>
            <version>3.13</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.13</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml-schemas</artifactId>
            <version>3.13</version>
        </dependency>

        <dependency>
            <groupId>xmlbeans</groupId>
            <artifactId>xmlbeans</artifactId>
            <version>2.3.0</version>
        </dependency>

        <!-- 打zip包相关  -->
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.8.4</version>
        </dependency>

        <!--highchart 图片导出-->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-transcoder</artifactId>
            <version>1.7</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-io</artifactId>
                    <groupId>commons-io</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-codec</artifactId>
            <version>1.7</version>
        </dependency>
        <!-- hightcharts END -->


        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.2.3</version>
        </dependency>

        <!-- ftp -->
        <dependency>
            <groupId>it.sauronsoftware.ftp4j</groupId>
            <artifactId>ftp4j</artifactId>
            <version>1.7.2</version>
        </dependency>

        <!-- activiti START -->
        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-engine</artifactId>
            <version>5.12.1</version>
        </dependency>

        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-spring</artifactId>
            <version>5.12.1</version>
        </dependency>
        <!-- activiti END -->

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>4.0.3</version>
        </dependency>

        <!-- 读取 MANIFEST.MF 文件 -->
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-manifests</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- markdown, 目前只能用 1.1.0 版本。因为还依赖 asm, xwork 也依赖 asm. 只有 1.1.0 版本两个 asm 版本才兼容 -->
        <dependency>
            <groupId>org.pegdown</groupId>
            <artifactId>pegdown</artifactId>
            <version>1.1.0</version>
        </dependency>

        <!-- QRcode 生成二维码的-->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
            <version>2.3.0</version>
        </dependency>

        <!--全文检索-->
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${es.version}</version>
        </dependency>

        <!--json转换-->
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
        </dependency>

        <dependency>
            <groupId>org.codehaus.xfire</groupId>
            <artifactId>xfire-java5</artifactId>
            <version>1.2.6</version>
        </dependency>

        <!--七牛云存储-->
        <dependency>
            <groupId>com.qiniu</groupId>
            <artifactId>qiniu-java-sdk</artifactId>
            <version>7.0.7</version>
        </dependency>

        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.18</version>
        </dependency>

        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>canvg</artifactId>
            <version>1.3.0</version>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>freeroute-snapshot</id>
            <name>Freeroute Snapshot Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <!-- FOR ftp4j -->
        <repository>
            <id>bastengao-mvn-repository</id>
            <url>https://raw.github.com/bastengao/mvn-repository/master/releases</url>
        </repository>

        <!-- FOR activiti -->
        <repository>
            <id>Alfresco Maven Repository</id>
            <url>https://maven.alfresco.com/nexus/content/groups/public/</url>
        </repository>
    </repositories>

    <reporting>
        <plugins>
            <!-- project info -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.6</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>project-team</report>
                            <report>license</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <show>private</show>
                    <stylesheetfile>${project.basedir}/src/site/javadoc/stylesheet.css</stylesheetfile>
                </configuration>
            </plugin>
            <!-- 测试覆盖率 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>
        </plugins>
    </reporting>

    <build>
        <finalName>galaxy</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- 数据库插件, 测试执行新重新构建数据库(1.删库 2.建库 3.建表 4.初始化数据) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>

                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.21</version>
                    </dependency>
                </dependencies>

                <!-- common configuration shared by all executions -->
                <configuration>
                    <driver>com.mysql.jdbc.Driver</driver>
                    <url>jdbc:mysql://${dbHost}:${dbPort}/${testDB}</url>
                    <username>${dbUser}</username>
                    <password>${dbPassword}</password>
                </configuration>

                <executions>
                    <execution>
                        <id>drop-create-db</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <url>jdbc:mysql://${dbHost}:${dbPort}/test</url>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>src/main/sql/rebuild-db.sql</srcFile>
                            </srcFiles>
                            <skip>${skipTests}</skip>
                        </configuration>
                    </execution>

                    <execution>
                        <!-- 创建表，初始化数据 -->
                        <id>init-database</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <!-- 表 -->
                                <srcFile>src/main/sql/galaxy-schema-all.sql</srcFile>
                                <!-- 初始化数据 -->
                                <srcFile>src/main/sql/galaxy-data-all.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>

                    <execution>
                        <!-- 创建表，初始化数据 -->
                        <id>init-database2</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <delimiter>;;</delimiter>
                            <srcFiles>
                                <!-- 视图/函数/存储过程 -->
                                <srcFile>src/main/sql/galaxy-block-all.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 将 resources/custom/ 下的 properties 通过 native2ascii 处理(解决乱码问题) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native2ascii-maven-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <includes>
                        <include>custom/*.properties</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 站点插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-module-markdown</artifactId>
                        <version>1.3</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <inputEncoding>UTF-8</inputEncoding>
                    <outputEncoding>UTF-8</outputEncoding>
                    <locales>zh_CN</locales>
                </configuration>
            </plugin>

            <!-- 数据库迁移 -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>4.0.3</version>
                <configuration>
                    <driver>com.mysql.jdbc.Driver</driver>
                    <url>jdbc:mysql://${dbHost}:${dbPort}/${db}</url>
                    <user>${dbUser}</user>
                    <password>${dbPassword}</password>
                    <locations>
                        <location>db.migration</location>
                        <location>filesystem:src/main/resources/db/migration</location>
                    </locations>
                    <outOfOrder>true</outOfOrder>
                    <validateOnMigrate>false</validateOnMigrate>
                    <!-- 默认为 1, 脚本的版本了为 1, 那么一个空的数据库直接 flyway:migrate 不会有问题，
                    当先 flyway:init 后 flyway:migrate 的时候，认为 V1__**** 已经执行了。
                     -->
                    <baselineVersion>0</baselineVersion>
                </configuration>

                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>baseline</goal>
                            <goal>migrate</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <url>jdbc:mysql://${dbHost}:${dbPort}/${testDB}</url>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 产生svn版本号 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>true</doCheck>
                    <doUpdate>false</doUpdate>
                </configuration>
            </plugin>
            <!-- 将版本号写入MANIFEST.MF 文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <App-Version>${project.version}</App-Version>
                            <App-Svn-Revision>${buildNumber}</App-Svn-Revision>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- 将项目打 zip 与 tar.gz 包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>src</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!--
        重新创建数据库, 默认数据为 devDB
        执行命令: $> mvn validate -P rebuild-db
        更多参数可改为 $> mvn validate -P rebuild-db -DdevDB=galaxy_product -DdbHost=192.168.0.88
        -->
        <profile>
            <id>rebuild-db</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>

                        <dependencies>
                            <dependency>
                                <groupId>mysql</groupId>
                                <artifactId>mysql-connector-java</artifactId>
                                <version>5.1.21</version>
                            </dependency>
                        </dependencies>

                        <!-- common configuration shared by all executions -->
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://${dbHost}:${dbPort}/${devDB}</url>
                            <username>${dbUser}</username>
                            <password>${dbPassword}</password>
                        </configuration>

                        <executions>
                            <execution>
                                <id>drop-create-db</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <!-- need another database to drop the targeted one -->
                                    <url>jdbc:mysql://${dbHost}:${dbPort}/test</url>
                                    <autocommit>true</autocommit>
                                    <sqlCommand>DROP DATABASE IF EXISTS `${devDB}`</sqlCommand>
                                    <sqlCommand>CREATE DATABASE IF NOT EXISTS `${devDB}`</sqlCommand>
                                    <!-- ignore error when database is not avaiable -->
                                    <!--<onError>continue</onError>-->
                                </configuration>
                            </execution>

                            <execution>
                                <!-- 创建表，初始化数据 -->
                                <id>init-database</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <srcFiles>
                                        <!-- 表 -->
                                        <srcFile>src/main/sql/galaxy-schema-all.sql</srcFile>
                                        <!-- 初始化数据 -->
                                        <srcFile>src/main/sql/galaxy-data-all.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>

                            <execution>
                                <!-- 视图/函数/存储过程 -->
                                <id>init-database2</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <delimiter>;;</delimiter>
                                    <srcFiles>
                                        <!-- 视图/函数/存储过程 -->
                                        <srcFile>src/main/sql/galaxy-block-all.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <scm>
        <url>https://github.com/microwisesystem/galaxy.git</url>
        <!-- 版本库地址, buildNumber 插件使用 -->
        <connection>scm:git:git@github.com:microwisesystem/galaxy.git</connection>
    </scm>
</project>
