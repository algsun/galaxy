<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
       http://www.springframework.org/schema/aop   
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
       http://www.springframework.org/schema/tx   
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context  
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!--&lt;!&ndash; 配置数据源 &ndash;&gt;-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"-->
    <!--destroy-method="close">-->
    <!--&lt;!&ndash; 数据库驱动 &ndash;&gt;-->
    <!--<property name="driverClass" value="${jdbc.driver}"/>-->
    <!--&lt;!&ndash; 连接URL串 &ndash;&gt;-->
    <!--<property name="jdbcUrl" value="${jdbc.url}"/>-->
    <!--&lt;!&ndash; 连接用户名 &ndash;&gt;-->
    <!--<property name="user" value="${jdbc.username}"/>-->
    <!--&lt;!&ndash; 连接密码 &ndash;&gt;-->
    <!--<property name="password" value="${jdbc.password}"/>-->
    <!--&lt;!&ndash; 初始化连接池时连接数量为5个 &ndash;&gt;-->
    <!--<property name="initialPoolSize" value="10"/>-->
    <!--&lt;!&ndash; 允许最小连接数量为5个 &ndash;&gt;-->
    <!--<property name="minPoolSize" value="5"/>-->
    <!--&lt;!&ndash; 允许最大连接数量为20个 &ndash;&gt;-->
    <!--<property name="maxPoolSize" value="100"/>-->
    <!--&lt;!&ndash; 允许连接池最大生成100个PreparedStatement对象 &ndash;&gt;-->
    <!--<property name="maxStatements" value="100"/>-->
    <!--&lt;!&ndash; 连接有效时间，连接超过3600秒未使用，则该连接丢弃 &ndash;&gt;-->
    <!--<property name="maxIdleTime" value="3600"/>-->
    <!--&lt;!&ndash; 连接用完时，一次产生的新连接步进值为2 &ndash;&gt;-->
    <!--<property name="acquireIncrement" value="2"/>-->
    <!--&lt;!&ndash; 获取连接失败后再尝试10次，再失败则返回DAOException异常 &ndash;&gt;-->
    <!--<property name="acquireRetryAttempts" value="10"/>-->
    <!--&lt;!&ndash; 获取下一次连接时最短间隔600毫秒，有助于提高性能 &ndash;&gt;-->
    <!--<property name="acquireRetryDelay" value="600"/>-->
    <!--&lt;!&ndash; 检查连接的有效性，此处小弟不是很懂什么意思 &ndash;&gt;-->
    <!--<property name="testConnectionOnCheckin" value="true"/>-->
    <!--&lt;!&ndash; 每个1200秒检查连接对象状态 &ndash;&gt;-->
    <!--<property name="idleConnectionTestPeriod" value="1200"/>-->
    <!--&lt;!&ndash; 获取新连接的超时时间为10000毫秒 &ndash;&gt;-->
    <!--<property name="checkoutTimeout" value="10000"/>-->
    <!--</bean>-->

    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="resultSetLogEnabled" value="false" />
        <property name="statementExecutableSqlLogEnable" value="false" />
    </bean>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="connectionStackTraceEnable" value="true"/>
        <property name="slowSqlMillis" value="3000" />
        <property name="logSlowSql" value="true" />
        <property name="mergeSql" value="true" />
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 数据库驱动 -->
        <property name="DriverClassName" value="${jdbc.driver}"/>
        <!-- 连接URL串 -->
        <property name="url" value="${jdbc.url}"/>
        <!-- 连接用户名 -->
        <property name="username" value="${jdbc.username}"/>
        <!-- 连接密码 -->
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化连接池时连接数量为5个 -->
        <property name="initialSize" value="2"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="2" />
        <!-- 允许最大连接数量为20个 -->
        <property name="maxActive" value="5"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 连接有效时间，连接超过3600秒未使用，则该连接丢弃 -->
        <property name="timeBetweenEvictionRunsMillis" value="3600"/>
        <!-- 最小逐出时间 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <!-- 连接空闲时测试是否有效 -->
        <property name="testWhileIdle" value="true" />
        <!-- 获取连接时测试是否有效 -->
        <property name="testOnBorrow" value="false" />
        <!-- 归还连接时是否测试有效 -->
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="100" />

        <property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 -->
        <property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
        <!--DruidDataSource会定期把监控数据输出到日志中-->
        <!--<property name="timeBetweenLogStatsMillis" value="300000" />-->
        <property name="filters" value="log4j" />

        <property name="proxyFilters">
            <list>
                <ref bean="log-filter" />
                <ref bean="stat-filter" />
            </list>
        </property>
        <property name="useGlobalDataSourceStat" value="true" />
    </bean>

    <!--第一次可能需要你改为baseline方法 初始化 schema_version表，以后基本都是migrate-->
    <!--开发阶段都设置为info-->
    <bean id="flywayMigration" class="org.flywaydb.core.Flyway" init-method="migrate">
        <property name="dataSource" ref="dataSource" />
        <property name="outOfOrder" value="true" />
        <property name="validateOnMigrate" value="false"/>
    </bean>
    <!-- hibernate-sessionFactory -->
    <bean id="hibernate-sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" depends-on="flywayMigration">
        <property name="configLocation" value="classpath:common/common-hibernate.cfg.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="hibernate-transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernate-sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="hibernate-transactionManager"/>

</beans>